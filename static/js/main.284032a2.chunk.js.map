{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/YourCollectible.address.js","contracts/YourCollectible.abi.js","contracts/YourCollectible.bytecode.js","contracts/contracts.js","hooks/OnBlock.js","hooks/Poller.js","hooks/Balance.js","hooks/ContractExistsAtAddress.js","hooks/ContractLoader.js","hooks/LookupAddress.js","constants.js","hooks/UserProvider.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Header.jsx","components/Swap.jsx","components/Timeline.jsx","components/NetworkDisplay.jsx","views/Balloon.jsx","views/Balloons.jsx","views/Hints.jsx","views/Subgraph.jsx","views/MintPage.jsx","App.jsx","hooks/GasPrice.js","hooks/EventListener.js","index.jsx","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$","fonts/Air Balloon - TTF.ttf"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useOnBlock","provider","fn","args","savedCallback","useRef","useEffect","current","listener","blockNumber","length","on","off","usePoller","delay","extraWatch","setInterval","clearInterval","useBalance","address","pollTime","useState","balance","setBalance","pollBalance","useCallback","a","getBalance","newBalance","useContractExistsAtAddress","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","bytecode","loadContract","contractName","signer","newContract","Contract","require","console","log","useContractLoader","providerOrSigner","contracts","setContracts","listAccounts","accounts","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","lookupAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","window","localStorage","getItem","JSON","parse","timestamp","Date","now","name","then","setItem","stringify","INFURA_ID","NETWORK","chainId","n","NETWORKS","localhost","color","blockExplorer","rpcUrl","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","polygon","nativeCurrency","symbol","decimals","mumbai","buidlguidl","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","connection","url","Web3Provider","BurnerProvider","networkName","_network","Text","Typography","Address","props","value","ens","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","size","text","etherscanLink","blockExplorerLink","minimized","style","verticalAlign","target","href","rel","seed","toLowerCase","scale","onChange","editable","copyable","fontSize","paddingLeft","Balance","dollarMode","setDollarMode","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","padding","cursor","onClick","ethers","callbacks","Transactor","etherscan","tx","callback","Signer","isSigner","getNetwork","network","_isProvider","notify","options","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","utils","parseUnits","gasLimit","hexlify","sendTransaction","emitter","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","wait","data","error","body","obj","errorObj","Blockie","AddressInput","setValue","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","newValue","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","key","KeyOutlined","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","disabled","loading","parseEther","to","SendOutlined","Account","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","constants","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","inputs","input","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","event","suffix","txValueInput","floatValue","BigNumber","from","toHexString","payable","buttonIcon","defaultValue","bordered","height","innerIndex","baseType","stateMutability","returned","overrides","noContractDisplay","className","borderRadius","fontWeight","marginRight","role","aria-label","contract","customContract","account","show","displayedContractFunctions","values","interface","functions","filter","contractDisplay","isQueryable","connect","Header","subTitle","Select","Option","NetworkDisplay","NETWORKCHECK","localChainId","selectedChainId","targetNetwork","USE_NETWORK_SELECTOR","networkDisplay","networkSelected","networkLocal","right","closable","ethereum","toString","chainName","rpcUrls","blockExplorerUrls","request","method","params","switchTx","Balloon","addr","balloon","x","y","screenWidth","screenHeight","currentTime","hasLaunched","owner","wobbleEffectNum","slice","launched","setLaunched","hasBeenLaunched","Number","launchDate","src","image","backgroundColor","icon","Balloons","balloons","existingBalloons","innerWidth","oldBalloons","numFromHex","hex","place","parseInt","xPos","yPos","variance","balloonX","balloonSize","balloonY","newMintBalloons","direction","indicator","LoadingOutlined","marginBottom","Subgraph","MintPage","mintItem","myMintedBalloons","mintingBalloon","indexerUrl","carousel","isLoadingBalloons","setIsLoadingBalloons","selectedBalloon","setSelectedBalloon","mintPressed","setMintPressed","myBalloons","setMyBalloons","allMyBalloons","setAllMyBalloons","getBalloonsForAddress","fetch","response","json","tokensMetadata","afterChange","index","setTimeout","goTo","all","concat","flexDirection","flexWrap","justifyContent","alignContent","alignItems","fontFamily","background","ref","beforeChange","fromSlide","toSlide","dots","dotPosition","textShadow","toDateString","attributes","output","attr","toUpperCase","balloonColorElements","BufferList","ipfsAPI","host","port","protocol","scaffoldEthProvider","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","App","getTime","setCurrentTime","mintUrl","setMintUrl","isFullView","setIsFullView","origin","setExistingBalloons","fullPageReturned","page","perPage","fetchData","setInjectedProvider","clearCachedProvider","disconnect","speed","setGasPrice","loadGasPrice","axios","get","newGasPrice","catch","useGasPrice","faucetTx","yourLocalBalance","readContracts","writeContracts","_isSigner","pageLoadBlock","setPageLoadBlock","getBlockNumber","transferEvents","eventName","startBlock","updates","setUpdates","resetEventsBlock","messages","pop","removeListener","useEventListener","setMintingBalloon","setMyMintedBalloons","newBalloons","setNewBalloons","YourCollectible","update","status","gasUsed","gas","tokenId","findIndex","b","tokenURI","jsonManifestString","atob","substring","jsonManifest","uri","updateYourCollectibles","faucetHint","faucetClicked","setFaucetClicked","exact","path","bottom","zoom","themes","dark","light","subgraphUri","client","ApolloClient","InMemoryCache","ReactDOM","render","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.284032a2.chunk.js","sourcesContent":["var map = {\n\t\"./YourCollectible.address.js\": 1438\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1437;","module.exports = \"0x261Bf332DFDb49b2321d930EEAd51C81B2B76fbd\";","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balloons\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"seed\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"launchDate\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"baseURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"generateSVGofTokenById\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"mintItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"renderTokenById\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"\";","module.exports = [\"YourCollectible\"];","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\nconst DEBUG = false;\n\nexport default function useOnBlock(provider, fn, args) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n\n  // Turn on the listener if we have a function & a provider\n  useEffect(() => {\n    if (fn && provider) {\n      const listener = blockNumber => {\n        if (DEBUG) console.log(blockNumber, fn, args, provider.listeners());\n\n        if (args && args.length > 0) {\n          savedCallback.current(...args);\n        } else {\n          savedCallback.current();\n        }\n      };\n\n      provider.on(\"block\", listener);\n\n      return () => {\n        provider.off(\"block\", listener);\n      };\n    }\n  }, [provider]);\n}\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  }, [extraWatch]);\n}\n","import { useCallback, useState } from \"react\";\nimport useOnBlock from \"./OnBlock\";\nimport usePoller from \"./Poller\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n  - If no pollTime is passed, the balance will update on every new block\n*/\n\nconst DEBUG = false;\n\nexport default function useBalance(provider, address, pollTime = 0) {\n  const [balance, setBalance] = useState();\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if (provider && address) {\n        const newBalance = await provider.getBalance(address);\n        if (newBalance !== balance) {\n          setBalance(newBalance);\n        }\n      }\n    },\n    [provider, address],\n  );\n\n  // Only pass a provider to watch on a block if there is no pollTime\n  useOnBlock(pollTime === 0 && provider, () => {\n    if (provider && address && pollTime === 0) {\n      pollBalance(provider, address);\n    }\n  });\n\n  // Use a poller if a pollTime is provided\n  usePoller(\n    async () => {\n      if (provider && address && pollTime > 0) {\n        if (DEBUG) console.log(\"polling!\", address);\n        pollBalance();\n      }\n    },\n    pollTime,\n    provider && address,\n  );\n\n  return balance;\n}\n","import { isAddress } from \"@ethersproject/address\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\n\n  ~ How can I use? ~\n\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\n\n  ~ Features ~\n\n  - Provide contractAddress to check if the contract is deployed\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\n*/\n\nconst useContractExistsAtAddress = (provider, contractAddress) => {\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\n\n  // We can look at the blockchain and see what's stored at `contractAddress`\n  // If we find code then we know that a contract exists there.\n  // If we find nothing (0x0) then there is no contract deployed to that address\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    const checkDeployment = async () => {\n      if (!isAddress(contractAddress)) return false;\n      const bytecode = await provider.getCode(contractAddress);\n      setContractIsDeployed(bytecode !== \"0x0\");\n    };\n    if (provider) checkDeployment();\n  }, [provider, contractAddress]);\n\n  return contractIsDeployed;\n};\n\nexport default useContractExistsAtAddress;\n","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts\n  or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts\n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n*/\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","import { getAddress, isAddress } from \"@ethersproject/address\";\nimport { useEffect, useState } from \"react\";\n\n// resolved if(name){} to not save \"\" into cache\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if (isAddress(address)) {\n    // console.log(`looking up ${address}`)\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = await provider.lookupAddress(address);\n\n      const resolvedAddress = await provider.resolveName(reportedName);\n\n      if (getAddress(address) === getAddress(resolvedAddress)) {\n        return reportedName;\n      }\n      return getAddress(address);\n    } catch (e) {\n      return getAddress(address);\n    }\n  }\n  return 0;\n};\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address);\n  // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\n    cache = cache && JSON.parse(cache);\n\n    if (cache && cache.timestamp > Date.now()) {\n      setEnsName(cache.name);\n    } else if (provider) {\n      lookupAddress(provider, address).then(name => {\n        if (name) {\n          setEnsName(name);\n          window.localStorage.setItem(\n            \"ensCache_\" + address,\n            JSON.stringify({\n              timestamp: Date.now() + 360000,\n              name,\n            }),\n          );\n        }\n      });\n    }\n  }, [provider, address, setEnsName]);\n\n  return ensName;\n};\n\nexport default useLookupAddress;\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n\nexport const DAI_ABI = [\n  {\n    inputs: [{ internalType: \"uint256\", name: \"chainId_\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"guy\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: true,\n    inputs: [\n      { indexed: true, internalType: \"bytes4\", name: \"sig\", type: \"bytes4\" },\n      { indexed: true, internalType: \"address\", name: \"usr\", type: \"address\" },\n      { indexed: true, internalType: \"bytes32\", name: \"arg1\", type: \"bytes32\" },\n      { indexed: true, internalType: \"bytes32\", name: \"arg2\", type: \"bytes32\" },\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"LogNote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"dst\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"burn\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"guy\", type: \"address\" }],\n    name: \"deny\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"mint\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"src\", type: \"address\" },\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"move\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"nonces\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"holder\", type: \"address\" },\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"allowed\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"pull\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"push\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"guy\", type: \"address\" }],\n    name: \"rely\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"src\", type: \"address\" },\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"wards\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  polygon: {\n    name: \"polygon\",\n    color: \"#2bbdf7\",\n    nativeCurrency: {\n      name: \"Matic Token\",\n      symbol: \"MATIC\",\n      decimals: 18,\n    },\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://polygon-rpc.com/\",\n    blockExplorer: \"https://polygonscan.com/\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n  buidlguidl: {\n    name: \"buidlguidl\",\n    color: \"#1785ff\",\n    price: 1,\n    chainId: 80216,\n    rpcUrl: `https://chain.buidlguidl.com:8545`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n};\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { useMemo } from \"react\";\nimport { INFURA_ID } from \"../constants\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const address = useUserAddress(userProvider);\n    const tx = Transactor(userProvider, gasPrice)\n*/\n\nconst useUserProvider = (injectedProvider, localProvider) =>\n  useMemo(() => {\n    if (injectedProvider) {\n      console.log(\"🦊 Using injected provider\");\n      return injectedProvider;\n    }\n    if (!localProvider) return undefined;\n\n    const burnerConfig = {};\n\n    if (window.location.pathname) {\n      if (window.location.pathname.indexOf(\"/pk\") >= 0) {\n        const incomingPK = window.location.hash.replace(\"#\", \"\");\n        let rawPK;\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\n          console.log(\"🔑 Incoming Private Key...\");\n          rawPK = incomingPK;\n          burnerConfig.privateKey = rawPK;\n          window.history.pushState({}, \"\", \"/\");\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n          }\n          window.localStorage.setItem(\"metaPrivateKey\", rawPK);\n        }\n      }\n    }\n\n    console.log(\"🔥 Using burner provider\", burnerConfig);\n    if (localProvider.connection && localProvider.connection.url) {\n      burnerConfig.rpcUrl = localProvider.connection.url;\n      return new Web3Provider(new BurnerProvider(burnerConfig));\n    }\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`;\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"../hooks\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n","import { formatEther } from \"@ethersproject/units\";\nimport React, { useState } from \"react\";\nimport { useBalance } from \"../hooks\";\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  // const [listening, setListening] = useState(false);\n\n  const balance = useBalance(props.provider, props.address);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier;\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","import { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nconst { ethers } = require(\"ethers\");\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\nconst callbacks = {};\n\nconst DEBUG = true;\n\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\n  if (typeof providerOrSigner !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx, callback) => {\n      let signer;\n      let network;\n      let provider;\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\n        provider = providerOrSigner.provider;\n        signer = providerOrSigner;\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\n      } else if (providerOrSigner._isProvider) {\n        provider = providerOrSigner;\n        signer = providerOrSigner.getSigner();\n        network = await providerOrSigner.getNetwork();\n      }\n\n      console.log(\"network\", network);\n      var options = null;\n      var notify = null;\n      options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          if (DEBUG) console.log(\"HANDLE TX\", txInformation);\n          const possibleFunction = callbacks[txInformation.transaction.hash];\n          if (typeof possibleFunction === \"function\") {\n            possibleFunction(txInformation.transaction);\n          }\n        },\n      };\n\n      notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = ethers.utils.hexlify(120000);\n          }\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        if (DEBUG) console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        if (callback) {\n          callbacks[result.hash] = callback;\n        }\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n          // on most networks BlockNative will update a transaction handler,\n          // but locally we will set an interval to listen...\n          if (callback) {\n            const txResult = await tx;\n            const listeningInterval = setInterval(async () => {\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\n                callback({ ...txResult, ...currentTransactionReceipt });\n                clearInterval(listeningInterval);\n              }\n            }, 500);\n          }\n        }\n\n        if (typeof result.wait === \"function\") {\n          await result.wait();\n        }\n\n        return result;\n      } catch (e) {\n        if (DEBUG) console.log(e);\n        // Accounts for Metamask and default signer on all networks\n        let message =\n          e.data && e.data.message\n            ? e.data.message\n            : e.error && JSON.parse(JSON.stringify(e.error)).body\n            ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message\n            : e.data\n            ? e.data\n            : JSON.stringify(e);\n        if (!e.error && e.message) {\n          message = e.message;\n        }\n\n        console.log(\"Attempt to clean up:\", message);\n        try {\n          let obj = JSON.parse(message);\n          if (obj && obj.body) {\n            let errorObj = JSON.parse(obj.body);\n            if (errorObj && errorObj.error && errorObj.error.message) {\n              message = errorObj.error.message;\n            }\n          }\n        } catch (e) {\n          //ignore\n        }\n\n        notification.error({\n          message: \"Transaction Error\",\n          description: message,\n        });\n        if (callback && typeof callback === \"function\") {\n          callback(e);\n        }\n      }\n    };\n  }\n}","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Badge, Input } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport React, { useCallback, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Blockie from \"./Blockie\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const { ensProvider, onChange } = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue);\n          if (possibleNewValue) {\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          } else {\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider);\n\n              let value;\n              try {\n                value = parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isSigner\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher();\n\n  const display = minimized || !isSigner ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} />\n      ) : (\n        \"Connecting...\"\n      )}\n      <Balance address={address} provider={localProvider} price={price} />\n      <Wallet\n        address={address}\n        provider={userProvider}\n        ensProvider={mainnetProvider}\n        price={price}\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n      />\n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { formatUnits } from \"@ethersproject/units\";\nimport React from \"react\";\nimport { Address } from \"..\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Col, Divider, Row } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh }) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nconst { utils } = require(\"ethers\");\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++;\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon =\n    functionInfo.type === \"call\" ? (\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\n    ) : (\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\n    );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0;\n              const args = functionInfo.inputs.map(input => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++;\n                let value = form[key];\n                if (input.baseType === \"array\") {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                const returned = await contractFunction(...args);\n                result = tryToDisplay(returned);\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import { Card } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { useContractExistsAtAddress, useContractLoader } from \"../../hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({\n  customContract,\n  account,\n  gasPrice,\n  signer,\n  provider,\n  name,\n  show,\n  price,\n  blockExplorer,\n}) {\n  const contracts = useContractLoader(provider);\n  let contract;\n  if (!customContract) {\n    contract = contracts ? contracts[name] : \"\";\n  } else {\n    contract = customContract;\n  }\n\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n\n  const displayedContractFunctions = useMemo(\n    () =>\n      contract\n        ? Object.values(contract.interface.functions).filter(\n            fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0),\n          )\n        : [],\n    [contract, show],\n  );\n\n  const [refreshRequired, triggerRefresh] = useState(false);\n  const contractDisplay = displayedContractFunctions.map(fn => {\n    if (isQueryable(fn)) {\n      // If there are no inputs, just display return value\n      return (\n        <DisplayVariable\n          key={fn.name}\n          contractFunction={contract[fn.name]}\n          functionInfo={fn}\n          refreshRequired={refreshRequired}\n          triggerRefresh={triggerRefresh}\n        />\n      );\n    }\n    // If there are inputs, display a form to allow users to provide these\n    return (\n      <FunctionForm\n        key={\"FF\" + fn.name}\n        contractFunction={\n          fn.stateMutability === \"view\" || fn.stateMutability === \"pure\"\n            ? contract[fn.name]\n            : contract.connect(signer)[fn.name]\n        }\n        functionInfo={fn}\n        provider={provider}\n        gasPrice={gasPrice}\n        triggerRefresh={triggerRefresh}\n      />\n    );\n  });\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\n\n// displays a page header\n\nexport default function Header() {\n  return (\n    <a href=\"/\">\n      <PageHeader\n        title=\"\"\n        subTitle=\"\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenList = await fetch(_tokenListUri);\n        const tokenListJson = await tokenList.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import { Alert, Button } from \"antd\";\nimport React from \"react\";\n\nimport { NETWORK } from \"../constants\";\n\nfunction NetworkDisplay({\n  NETWORKCHECK,\n  localChainId,\n  selectedChainId,\n  targetNetwork,\n  USE_NETWORK_SELECTOR,\n  logoutOfWeb3Modal,\n}) {\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 3, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 3, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = USE_NETWORK_SELECTOR ? null : (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 150, top: 25, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  return networkDisplay;\n}\n\nexport default NetworkDisplay;","/* eslint-disable consistent-return */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport \"./Balloons.css\";\nimport { Tag } from \"antd\";\nimport { Blockie } from \"../components\";\nimport { useLookupAddress } from \"../hooks\";\n\n\n// import { balloons } from \"./balloonsStubData.json\";\nexport default function Balloon({\n  balloon,\n  x,\n  y,\n  screenWidth,\n  screenHeight,\n  currentTime,\n  hasLaunched = true,\n  size = 70,\n  position = \"absolute\",\n  margin = \"0\",\n  mainnetProvider,\n}) {\n  const ens = useLookupAddress(mainnetProvider, balloon.owner);\n  const formatAddress = addr => {\n    if (ens) {\n      return `${ens.substr(0, 6)}...${ens.substr(-4)}`;\n    }\n    return `${addr.substr(0, 6)}...${addr.substr(-4)}`;\n  };\n\n  const wobbleEffectNum = balloon.seed.slice(2)[3];\n\n  const [launched, setLaunched] = useState(hasLaunched);\n\n  const hasBeenLaunched = () => {\n    return launched;\n  };\n  useEffect(() => {\n    setLaunched(!(currentTime - Number(balloon.launchDate) * 1000 < 25000));\n  }, [currentTime]);\n\n  return (\n    <div\n      className=\"balloon\"\n      style={{\n        width: size,\n        margin,\n        position,\n        left: hasBeenLaunched() ? x - size / 2 + \"px\" : screenWidth - x - size / 2 + \"px\", // X start position is opposite from ending X position\n        top: hasBeenLaunched() ? y + \"px\" : screenHeight - 300 + \"px\",\n      }}\n    >\n      <img\n        key={\"ballon-\" + balloon.seed}\n        src={balloon.image}\n        // onLoad={effect}\n        className={hasBeenLaunched() ? \" wobble-\" + wobbleEffectNum : \"\"}\n        width=\"100%\"\n      />\n      {hasBeenLaunched() ? (\n        \"\"\n      ) : (\n        <div className=\"owner-tag\" key={\"minter-\" + balloon.seed}>\n          <Tag\n            style={{ backgroundColor: \"#ffffff95\", color: \"#000\" }}\n            icon={<Blockie size={12} scale={1} address={balloon.owner} />}\n          >\n            {\" \"}\n            {formatAddress(balloon.owner)}\n          </Tag>\n        </div>\n      )}\n    </div>\n  );\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport \"./Balloons.css\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Space, Spin } from \"antd\";\nimport Balloon from \"./Balloon\";\n\n// import { balloons } from \"./balloonsStubData.json\";\nexport default function Balloons({ balloons, existingBalloons, loading, currentTime, mainnetProvider }) {\n  const balloonSize = 70;\n  const screenWidth = window.innerWidth;\n  const screenHeight = screenWidth * (48 / 28); // background ratio\n  // console.log(screenWidth, screenHeight);\n  const oldBalloons = existingBalloons.map(balloon => {\n    // console.log(currentDate, startDate, endDate, difference, heightRatio);\n    // this is both deterministic (so that they don't hop around on reflow)\n    // and pseudo-random so that all the balloons don't bunch together\n    const numFromHex = (hex, place) => {\n      // trim the 0x from the hex string\n      if (hex[1] === \"x\") {\n        hex = hex.slice(2);\n      }\n      // returns a pseudo-random number between 1 and 16\n      const pos = parseInt(hex[place], 16) + 1;\n      return pos;\n    };\n    const xPos = numFromHex(balloon.seed, 1);\n    const yPos = numFromHex(balloon.seed, 2);\n    const variance = numFromHex(balloon.seed, 3); // Variance is used to very slightly tweak X and Y positions so that balloons are dispersed\n    // Balloon X and Y positions is based on seed so that it always appears in the same place when page reloads\n    const balloonX = (screenWidth / 17) * xPos + variance * 4 - balloonSize / 2;\n    const balloonY = (screenHeight / 35) * yPos + variance * 10;\n\n    return (\n      <Balloon\n        balloon={balloon}\n        x={balloonX}\n        y={balloonY}\n        screenHeight={screenHeight}\n        screenWidth={screenWidth}\n        currentTime={currentTime}\n      />\n    );\n  });\n  const newMintBalloons = balloons.map(balloon => {\n    // console.log(currentDate, startDate, endDate, difference, heightRatio);\n    // this is both deterministic (so that they don't hop around on reflow)\n    // and pseudo-random so that all the balloons don't bunch together\n    const numFromHex = (hex, place) => {\n      // trim the 0x from the hex string\n      if (hex[1] === \"x\") {\n        hex = hex.slice(2);\n      }\n      // returns a pseudo-random number between 1 and 16\n      const pos = parseInt(hex[place], 16) + 1;\n      return pos;\n    };\n    const xPos = numFromHex(balloon.seed, 1);\n    const yPos = numFromHex(balloon.seed, 2);\n    const variance = numFromHex(balloon.seed, 3); // Variance is used to very slightly tweak X and Y positions so that balloons are dispersed\n    // Balloon X and Y positions is based on seed so that it always appears in the same place when page reloads\n    const balloonX = (screenWidth / 17) * xPos + variance * 4 - balloonSize / 2;\n    const balloonY = (screenHeight / 35) * yPos + variance * 10;\n\n    // Create Balloon element that gets reflowed at interval\n    return (\n      <Balloon\n        balloon={balloon}\n        x={balloonX}\n        y={balloonY}\n        screenHeight={screenHeight}\n        screenWidth={screenWidth}\n        currentTime={currentTime}\n        hasLaunched={false}\n        mainnetProvider={mainnetProvider}\n      />\n    );\n  });\n  console.log(newMintBalloons, oldBalloons);\n  return (\n    <div>\n      {loading ? (\n        <Space\n          direction=\"vertical\"\n          style={{ left: screenWidth / 2 - 100, top: screenHeight / 2 - 100, position: \"absolute\" }}\n        >\n          <Spin\n            size=\"large\"\n            indicator={<LoadingOutlined style={{ fontSize: \"128px\" }} />}\n            style={{ width: \"200px\", marginBottom: \"100%\" }}\n          />\n        </Space>\n      ) : (\n        \"\"\n      )}\n      {newMintBalloons}\n      {oldBalloons}\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport { formatEther } from \"@ethersproject/units\";\nimport { Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, AddressInput } from \"../components\";\nimport { useTokenList } from \"../hooks\";\n\nconst { Option } = Select;\n\nexport default function Hints({ yourLocalBalance, mainnetProvider, price, address }) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  const listOfTokens = useTokenList(\n    \"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\",\n  );\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          className=\"highlight\"\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            /* backgroundColor: \"#f9f9f9\", */\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{formatEther(yourLocalBalance || 0)}</b>\n      </div>\n\n      <div style={{ margin: 8 }}>\n        <div>\n          <b>useTokenList()</b> can get you an array of tokens from{\" \"}\n          <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            tokenlists.org!\n          </a>\n        </div>\n        <Select\n          showSearch\n          value={selectedToken}\n          onChange={value => {\n            console.log(`selected ${value}`);\n            setSelectedToken(value);\n          }}\n          filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          optionFilterProp=\"children\"\n        >\n          {listOfTokens.map(token => (\n            <Option key={token.symbol} value={token.symbol}>\n              {token.symbol}\n            </Option>\n          ))}\n        </Select>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you&apos;ll need web3 specific components like an\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <Address address={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat\n        </span>\n        <div className=\"highlight\" style={{ marginTop: 8 }}>\n          (use{\" \"}\n          <span\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f1f1f1\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn run account\n          </span>{\" \"}\n          to display deployer address and balance)\n        </div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run surge\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run s3\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser&apos;s developer console for more... (inpect -&gt console) 🚀\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Button, Input, Table, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport GraphiQL from \"graphiql\";\nimport \"graphiql/graphiql.min.css\";\nimport fetch from \"isomorphic-fetch\";\nimport React, { useState } from \"react\";\nimport { Address } from \"../components\";\n\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n  /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\",\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const { loading, data } = useQuery(EXAMPLE_GQL, { pollInterval: 2500 });\n\n  const purposeColumns = [\n    {\n      title: \"Purpose\",\n      dataIndex: \"purpose\",\n      key: \"purpose\",\n    },\n    {\n      title: \"Sender\",\n      key: \"id\",\n      render: record => <Address value={record.sender.id} ensProvider={props.mainnetProvider} fontSize={16} />,\n    },\n    {\n      title: \"createdAt\",\n      key: \"createdAt\",\n      dataIndex: \"createdAt\",\n      render: d => new Date(d * 1000).toISOString(),\n    },\n  ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  const deployWarning = (\n    <div style={{ marginTop: 8, padding: 8 }}>Warning: 🤔 Have you deployed your subgraph yet?</div>\n  );\n\n  return (\n    <>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        You will find that parsing/tracking events with the{\" \"}\n        <span className=\"highlight\" style={highlight}>\n          useEventListener\n        </span>{\" \"}\n        hook becomes a chore for every new project.\n      </div>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        Instead, you can use{\" \"}\n        <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">\n          The Graph\n        </a>{\" \"}\n        with 🏗 scaffold-eth (\n        <a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\" rel=\"noopener noreferrer\">\n          learn more\n        </a>\n        ):\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚮</span>\n        Clean up previous data:\n        <span className=\"highlight\" style={highlight}>\n          rm -rf docker/graph-node/data/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        Spin up a local graph node by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-run-node\n        </span>\n        <span style={{ marginLeft: 4 }}>\n          {\" \"}\n          (requires{\" \"}\n          <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Docker\n          </a>\n          ){\" \"}\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📝</span>\n        Create your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-create-local\n        </span>\n        (only required once!)\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        Deploy your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-ship-local\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🖍️</span>\n        Edit your <b>local subgraph</b> in\n        <span className=\"highlight\" style={highlight}>\n          packages/subgraph/src\n        </span>\n        (learn more about subgraph definition{\" \"}\n        <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">\n          here\n        </a>\n        )\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🤩</span>\n        Deploy your <b>contracts and your subgraph</b> in one go by running\n        <span className=\"highlight\" style={highlight}>\n          yarn deploy-and-graph\n        </span>\n      </div>\n\n      <div style={{ width: 780, margin: \"auto\", paddingBottom: 64 }}>\n        <div style={{ margin: 32, textAlign: \"right\" }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            onClick={() => {\n              console.log(\"newPurpose\", newPurpose);\n              /* look how you call setPurpose on your contract: */\n              props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n            }}\n          >\n            Set Purpose\n          </Button>\n        </div>\n\n        {data ? (\n          <Table dataSource={data.purposes} columns={purposeColumns} rowKey=\"id\" />\n        ) : (\n          <Typography>{loading ? \"Loading...\" : deployWarning}</Typography>\n        )}\n\n        <div style={{ margin: 32, height: 400, border: \"1px solid #888888\", textAlign: \"left\" }}>\n          <GraphiQL fetcher={graphQLFetcher} docExplorerOpen query={EXAMPLE_GRAPHQL} />\n        </div>\n      </div>\n\n      <div style={{ padding: 64 }}>...</div>\n    </>\n  );\n}\n\nexport default Subgraph;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable consistent-return */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Balloons.css\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Carousel, Space, Spin, Tag } from \"antd\";\nimport Balloon from \"./Balloon\";\n\nexport default function MintPage({\n  isSigner,\n  mintItem,\n  loadWeb3Modal,\n  address,\n  myMintedBalloons,\n  mintingBalloon,\n  indexerUrl,\n}) {\n  const carousel = useRef();\n  const [isLoadingBalloons, setIsLoadingBalloons] = useState(true);\n  const [selectedBalloon, setSelectedBalloon] = useState();\n  const [mintPressed, setMintPressed] = useState(false);\n  const [myBalloons, setMyBalloons] = useState([]);\n  const [allMyBalloons, setAllMyBalloons] = useState([]);\n  const getBalloonsForAddress = async addr => {\n    try {\n      const response = await fetch(`${indexerUrl}/all/${addr}`);\n      const tokensMetadata = await response.json();\n      setSelectedBalloon(tokensMetadata[0]);\n      setMyBalloons(tokensMetadata);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setIsLoadingBalloons(false);\n  };\n  useEffect(() => {\n    getBalloonsForAddress(address);\n  }, [address]);\n  const goToNew = index => {\n    // Wait for reflow\n    setTimeout(() => {\n      carousel.current.goTo(index, false);\n    }, 10);\n  };\n  const afterChange = () => {\n    if (mintPressed) {\n      goToNew(allMyBalloons.length - 1);\n      setSelectedBalloon(allMyBalloons[allMyBalloons.length - 1]);\n      setMintPressed(false);\n    }\n  };\n  useEffect(() => {\n    const all = [].concat(myBalloons, myMintedBalloons);\n    setAllMyBalloons(all);\n  }, [myBalloons, myMintedBalloons]);\n  useEffect(() => {\n    if (allMyBalloons.length === 1) {\n      afterChange();\n    }\n  }, [allMyBalloons]);\n\n  const showMyBalloons = () => {\n    if (allMyBalloons.length === 0) {\n      return (\n        <div>\n          <h1 style={{ fontSize: \"128px\", margin: \"10%\" }}>?</h1>\n          <h1 style={{ fontSize: \"48px\" }}>No Balloons Found</h1>\n        </div>\n      );\n    }\n    return allMyBalloons.map(balloon => (\n      <Balloon\n        balloon={balloon}\n        x={0}\n        y={0}\n        screenWidth={300}\n        screenHeight={300}\n        size=\"40%\"\n        position=\"relative\"\n        margin=\"10px 30% 30px\"\n      />\n    ));\n  };\n  const onChange = (fromSlide, toSlide) => {\n    setSelectedBalloon(allMyBalloons[toSlide]);\n  };\n\n  const balloonColorElements = attributes => {\n    const output = [];\n    for (const attr of attributes) {\n      output.push(\n        <Tag style={{ margin: 10 }} color={attr.value}>\n          <h1 style={{ margin: 10, textShadow: \"none\", fontSize: 40 }}>{attr.value.toUpperCase()}</h1>\n        </Tag>,\n      );\n    }\n    return output;\n  };\n\n  return (\n    <>\n      {!isLoadingBalloons ? (\n        <div\n          style={{\n            zIndex: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"25px\",\n            width: \"100%\",\n            height: \"100%\",\n            fontFamily: \"AirBalloon\",\n            fontSize: 20,\n          }}\n        >\n          {allMyBalloons && allMyBalloons.length > 0 ? (\n            <h2 style={{ marginTop: 50 }}>Mint a balloon to launch it on the big screen</h2>\n          ) : (\n            <h2>\n              AUSTIN, WRITE SOMETHING HERE. Contrary to popular belief, Lorem Ipsum is not simply random text. It has\n              roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard\n              McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure\n              Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical\n              literature, discovered the undoubtable source.\n            </h2>\n          )}\n          {isSigner ? (\n            <button\n              className=\"btn-large-mobile\"\n              onClick={() => {\n                setMintPressed(true);\n                mintItem();\n              }}\n            >\n              Mint Balloon\n            </button>\n          ) : (\n            <button className=\"btn-large-mobile\" onClick={loadWeb3Modal}>\n              Connect Wallet\n            </button>\n          )}\n          {allMyBalloons && allMyBalloons.length > 0 ? (\n            <>\n              <h1 style={{ marginBottom: 0 }}>My Balloons</h1>\n              <div style={{ display: \"block\", background: \"#ffffff30\", width: \"100%\", height: \"auto\" }}>\n                <>\n                  <h1 style={{ fontSize: 30, margin: 0 }}>\n                    {allMyBalloons && allMyBalloons.length > 1 ? \"< < <  Swipe  > > >\" : \" \"}\n                  </h1>\n                  <Carousel ref={carousel} afterChange={afterChange} beforeChange={onChange} dots dotPosition=\"bottom\">\n                    {showMyBalloons()}\n                  </Carousel>\n                </>\n              </div>\n              {selectedBalloon ? (\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    textShadow: \"2px 2px 7px #000\",\n                  }}\n                >\n                  <h1 style={{ fontSize: 36 }}>{selectedBalloon.name}</h1>\n                  <h1 style={{ fontSize: 36 }}>\n                    Launched On: {new Date(Number(selectedBalloon.launchDate) * 1000).toDateString()}\n                  </h1>\n                  <h1 style={{ fontSize: 36 }}>Your balloon has the following colors:</h1>\n                  <div>{balloonColorElements(selectedBalloon.attributes)}</div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {isLoadingBalloons || mintingBalloon ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            position: \"absolute\",\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"#00000052\",\n            zIndex: 999,\n          }}\n        >\n          <Space direction=\"vertical\">\n            <Spin\n              size=\"large\"\n              indicator={<LoadingOutlined style={{ fontSize: \"128px\" }} />}\n              style={{ width: \"200px\", marginBottom: \"100%\" }}\n            />\n          </Space>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","import { ArrowRightOutlined, DownOutlined } from \"@ant-design/icons\";\nimport \"./fonts/Air Balloon - TTF.ttf\";\nimport { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useUserAddress } from \"eth-hooks\";\nimport QR from \"qrcode.react\";\nimport { utils } from \"ethers\";\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport StackGrid from \"react-stack-grid\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\n// import assets from \"./assets.js\";\nimport { BlockPicker } from \"react-color\";\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, NetworkDisplay } from \"./components\";\nimport { Balloons } from \"./views\";\nimport { DAI_ABI, DAI_ADDRESS, INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useExchangePrice,\n  useExternalContractLoader,\n  useGasPrice,\n  useOnBlock,\n  useUserProvider,\n} from \"./hooks\";\nimport exampleData from \"./example-data\";\nimport MintPage from \"./views/MintPage\";\n\nconst { BufferList } = require(\"bl\");\n// https://www.npmjs.com/package/ipfs-http-client\n\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\n// console.log(\"📦 Assets: \", assets);\n\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.polygon; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\nconst indexerUrl = \"http://localhost:32889\";\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_NETWORK_SELECTOR = true;\n\n// helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n// const getFromIPFS = async hashToGet => {\n//   for await (const file of ipfs.get(hashToGet)) {\n//     console.log(file.path);\n//     if (!file.content) continue;\n//     const content = new BufferList();\n//     for await (const chunk of file.content) {\n//       content.append(chunk);\n//     }\n//     console.log(content);\n//     return content;\n//   }\n// };\n\n// 🛰 providers\n// if (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\n  \"https://mainnet.infura.io/v3/\" + INFURA_ID /* \"https://rpc.scaffoldeth.io:48544\" */,\n);\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID);\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\n// const screenWidth = window.innerWidth;\n// const screenHeight = screenWidth * (48 / 28); // background ratio\n\nfunction App(props) {\n  const [currentTime, setCurrentTime] = useState(new Date().getTime());\n  const [mintUrl, setMintUrl] = useState(\"\");\n  const [isFullView, setIsFullView] = useState(false);\n  useEffect(() => {\n    // Check and set route\n    setIsFullView(window.location.pathname === \"/full-view\");\n    setMintUrl(window.location.origin);\n    // start currentTime counter\n    setInterval(() => {\n      setCurrentTime(new Date().getTime());\n    }, 2000);\n  }, []);\n\n  const [isLoadingBalloons, setIsLoadingBalloons] = useState(true);\n  const [existingBalloons, setExistingBalloons] = useState([]);\n  useEffect(() => {\n    if (!isFullView) return;\n    async function fetchData() {\n      const balloons = [];\n      let fullPageReturned = false;\n      let page = 1;\n      const perPage = 100;\n      while (!fullPageReturned) {\n        try {\n          const response = await fetch(`${indexerUrl}/all?page=${page}&perPage=${perPage}`);\n          const tokensMetadata = await response.json();\n          fullPageReturned = tokensMetadata.length !== perPage;\n          page++;\n          balloons.push(...tokensMetadata);\n        } catch (e) {\n          fullPageReturned = true;\n          console.error(e);\n        }\n      }\n      setExistingBalloons(balloons);\n      setIsLoadingBalloons(false);\n    }\n    fetchData();\n  }, [isFullView]);\n\n  // confetti setup\n  // const canvasStyles = {\n  //   position: \"fixed\",\n  //   pointerEvents: \"none\",\n  //   width: \"100%\",\n  //   height: \"100%\",\n  //   top: 0,\n  //   left: 0,\n  //   zIndex: -1,\n  // };\n  // const refAnimationInstance = useRef(null);\n\n  // const getInstance = useCallback(instance => {\n  //   refAnimationInstance.current = instance;\n  // }, []);\n\n  // const makeShot = useCallback((particleRatio, opts) => {\n  //   refAnimationInstance.current &&\n  //     refAnimationInstance.current({\n  //       ...opts,\n  //       origin: { y: 0.8 },\n  //       particleCount: Math.floor(200 * particleRatio),\n  //     });\n  // }, []);\n\n  // const showConfetti = useCallback(() => {\n  //   makeShot(0.25, {\n  //     spread: 26,\n  //     startVelocity: 55,\n  //   });\n\n  //   makeShot(0.2, {\n  //     spread: 60,\n  //   });\n\n  //   makeShot(0.35, {\n  //     spread: 100,\n  //     decay: 0.91,\n  //     scalar: 0.8,\n  //   });\n\n  //   makeShot(0.1, {\n  //     spread: 120,\n  //     startVelocity: 25,\n  //     decay: 0.92,\n  //     scalar: 1.2,\n  //   });\n\n  //   makeShot(0.1, {\n  //     spread: 120,\n  //     startVelocity: 45,\n  //   });\n  // }, [makeShot]);\n  // end confetti setup\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect === \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  // const price = useExchangePrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  // const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const isSigner = injectedProvider && injectedProvider.getSigner && injectedProvider.getSigner()._isSigner;\n\n  // If you want to call a function on a new block\n  // useOnBlock(mainnetProvider, () => {\n  //   console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  // });\n\n  // Then read your DAI balance like:\n  /*\n  const myMainnetDAIBalance = useContractReader({ DAI: mainnetDAIContract }, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]); */\n\n  // // keep track of a variable from the contract in the local React state:\n  // const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  // // console.log(\"🤗 balance:\", balance);\n\n  const [pageLoadBlock, setPageLoadBlock] = useState(0);\n\n  useEffect(() => {\n    const getBlockNumber = () => {\n      const blockNumber = localProvider.blockNumber + 1;\n      setPageLoadBlock(blockNumber);\n      console.log(\"transferEvents block: \", blockNumber);\n    };\n    if (localProvider.blockNumber > 0 && pageLoadBlock === 0) {\n      getBlockNumber();\n    }\n  }, [localProvider.blockNumber]);\n  // 📟 Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, pageLoadBlock);\n  // console.log(\"📟 Transfer events:\", transferEvents);\n\n  // const scrollToBottom = instant => {\n  //   window.scrollTo({\n  //     top: 10000,\n  //     behavior: instant ? \"auto\" : \"smooth\",\n  //   });\n  // };\n\n  // Scroll and confetti!\n  // const balloonScrollWithConfetti = () => {\n  //   // scroll to bottom of page\n  //   scrollToBottom();\n  //   // show confetti\n  //   // showConfetti();\n  // };\n\n  // Scroll to bottom of page on load\n  // useEffect(() => {\n  //   scrollToBottom(true);\n  // }, []);\n  //\n  // 🧠 This effect will update yourCollectibles by polling when your balance changes\n  //\n  // const total = useContractReader(readContracts, \"YourCollectible\", \"totalSupply\");\n  const [mintingBalloon, setMintingBalloon] = useState(false);\n  const [myMintedBalloons, setMyMintedBalloons] = useState([]);\n  const [newBalloons, setNewBalloons] = useState([]);\n  // const [userMintedTokenId, setUserMintedTokenId] = useState();\n\n  const mintItem = async () => {\n    setMintingBalloon(true);\n    await tx(writeContracts.YourCollectible.mintItem(), async update => {\n      console.log(\"📡 Transaction Update:\", update);\n      if (update && (update.status === \"confirmed\" || update.status === 1)) {\n        console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\n        console.log(\n          \" ⛽️ \" +\n            update.gasUsed +\n            \"/\" +\n            (update.gasLimit || update.gas) +\n            \" @ \" +\n            parseFloat(update.gasPrice) / 1000000000 +\n            \" gwei\",\n        );\n        setTimeout(() => {\n          setMintingBalloon(false);\n        }, 4000);\n      } else {\n        setMintingBalloon(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const balloons = [...newBalloons];\n      for await (const balloon of transferEvents) {\n        const tokenId = balloon.tokenId.toNumber();\n        if (balloons.findIndex(b => b.id === tokenId) === -1) {\n          try {\n            console.log(\"💰 tokenId:\", tokenId);\n            const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n            const jsonManifestString = atob(tokenURI.substring(29));\n            try {\n              const jsonManifest = JSON.parse(jsonManifestString);\n              balloons.push({ id: tokenId, uri: tokenURI, ...jsonManifest });\n            } catch (e) {\n              console.log(e);\n            }\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      }\n      setNewBalloons(balloons);\n      const myBalloons = balloons.filter(b => b.owner.toLowerCase() === address.toLowerCase());\n      setMyMintedBalloons(myBalloons);\n    };\n    updateYourCollectibles();\n  }, [transferEvents]);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name === \"localhost\";\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ position: \"absolute\", zIndex: 5, padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      {isFullView ? \"\" : <Header />}\n      {isFullView ? (\n        \"\"\n      ) : (\n        <NetworkDisplay\n          NETWORKCHECK={NETWORKCHECK}\n          localChainId={localChainId}\n          selectedChainId={selectedChainId}\n          targetNetwork={targetNetwork}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n        />\n      )}\n\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <MintPage\n              isSigner={isSigner}\n              mintItem={mintItem}\n              loadWeb3Modal={loadWeb3Modal}\n              address={address}\n              myMintedBalloons={myMintedBalloons}\n              mintingBalloon={mintingBalloon}\n              indexerUrl={indexerUrl}\n            />\n          </Route>\n          <Route exact path=\"/full-view\">\n            <Balloons\n              existingBalloons={existingBalloons}\n              balloons={newBalloons}\n              loading={isLoadingBalloons}\n              currentTime={currentTime}\n              mainnetProvider={mainnetProvider}\n            />\n            <h1\n              style={{\n                fontFamily: \"AirBalloon\",\n                fontSize: \"42px\",\n                color: \"#6d15de\",\n                margin: \"0 50px 40px\",\n                position: \"absolute\",\n                right: 150,\n                bottom: 0,\n              }}\n            >\n              Scan the QR code to launch a balloon! {\">\"}\n            </h1>\n            <QR\n              style={{ position: \"absolute\", right: 0, bottom: 0 }}\n              value={mintUrl}\n              size=\"150\"\n              level=\"H\"\n              includeMargin\n              renderAs=\"svg\"\n              imageSettings={{ excavate: false }}\n            />\n          </Route>\n          <Route path=\"/debug\">\n            <div style={{ padding: 32 }}>\n              <Address\n                value={readContracts && readContracts.YourCollectible && readContracts.YourCollectible.address}\n              />\n            </div>\n\n            <Contract\n              name=\"YourCollectible\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      {/* <ThemeSwitch /> */}\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      {isFullView ? (\n        \"\"\n      ) : (\n        <div style={{ zoom: \"130%\", position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n          <Account\n            address={address}\n            localProvider={localProvider}\n            userProvider={userProvider}\n            // mainnetProvider={mainnetProvider}\n            // price={price}\n            web3Modal={web3Modal}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            blockExplorer={blockExplorer}\n            isSigner={isSigner}\n          />\n          {faucetHint}\n        </div>\n      )}\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      {true ? (\n        \"\"\n      ) : (\n        <div style={{ zIndex: 999, position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={8}>\n              <Ramp /* price={price} */ address={address} networks={NETWORKS} />\n            </Col>\n\n            <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n              <GasGauge gasPrice={gasPrice} />\n            </Col>\n            <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n              <Button\n                onClick={() => {\n                  window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n                }}\n                size=\"large\"\n                shape=\"round\"\n              >\n                <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                  💬\n                </span>\n                Support\n              </Button>\n            </Col>\n          </Row>\n\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={24}>\n              {\n                /*  if the local provider has a signer, let's show the faucet:  */\n                faucetAvailable ? (\n                  <Faucet localProvider={localProvider} /* price={price} ensProvider={mainnetProvider} */ />\n                ) : (\n                  \"\"\n                )\n              }\n            </Col>\n          </Row>\n        </div>\n      )}\n      {/* <ReactCanvasConfetti refConfetti={getInstance} style={canvasStyles} /> */}\n    </div>\n  );\n}\n\n/* eslint-disable */\nwindow.ethereum &&\n  window.ethereum.on(\"chainChanged\", chainId => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n\nwindow.ethereum &&\n  window.ethereum.on(\"accountsChanged\", accounts => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n/* eslint-enable */\n\nexport default App;\n","import axios from \"axios\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\n\nexport default function useGasPrice(targetNetwork, speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if (targetNetwork.gasPrice) {\n      setGasPrice(targetNetwork.gasPrice);\n    } else {\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Enables you to keep track of events\n\n  ~ How can I use? ~\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\n  - Specify the provider\n*/\n\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    // Added this so that we don't start listening for events until we have initialized the most recent block\n    if (startBlock > 0) {\n      if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n        // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n        provider.resetEventsBlock(startBlock);\n      }\n      if (contracts && contractName && contracts[contractName]) {\n        try {\n          contracts[contractName].on(eventName, (...args) => {\n            const blockNumber = args[args.length - 1].blockNumber;\n            setUpdates(messages => [{ blockNumber, ...args.pop().args }, ...messages]);\n          });\n          return () => {\n            contracts[contractName].removeListener(eventName);\n          };\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n\n  return updates;\n}\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme=\"dark\">\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var map = {\n\t\"./YourCollectible.abi.js\": 1439\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 718;","var map = {\n\t\"./YourCollectible.bytecode.js\": 1440\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 719;","module.exports = __webpack_public_path__ + \"static/media/Air Balloon - TTF.88e89622.ttf\";"],"sourceRoot":""}